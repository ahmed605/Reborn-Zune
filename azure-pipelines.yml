# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'CICD_Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $pfxpath = 'Reborn-Zune\Reborn-Zune_StoreKey.pfx'
      $password = 'dadaCS48825!'
      
      Add-Type -AssemblyName System.Security
      $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
      $cert.Import($pfxpath, $password, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
      $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", CurrentUser
      $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
      $store.Add($cert)
      $store.Close()

- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" 
                  /p:AppxPackageDir="$(appxPackageDir)"
                  /p:AppxPackageSigningEnabled=true
                  /p:AppxBundle=Always 
                  /p:UapAppxPackageBuildMode=StoreUpload
                  /p:PackageCertificateThumbprint="0FB468EE92880A98E7F2BE947E06EB6F762F8B87" 
                  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
                  /p:PackageCertificatePassword="dadaCS48825!"'
                  
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

- task: DownloadPipelineArtifact@2
  inputs:
    artifact: drop
    patterns: '**/*.msixbundle'
    path: $(Build.SourcesDirectory)/bin

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ls ./bin/AppxPackages/*/*.msixbundle


- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'AppCenter'
    appSlug: 'yinjunda-cool-i9uc/Reborn-Zune'
    appFile: './bin/AppxPackages/*/*.msixbundle'
    releaseNotesOption: 'input'
    releaseNotesInput: 'Initial'
    destinationType: 'groups'
    distributionGroupId: '4e919a81-ff4e-490a-8669-310fb9037efc'



